<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SciChart.Wpf.UI.Bootstrap</name>
    </assembly>
    <members>
        <member name="F:SciChart.Wpf.UI.Bootstrap.CreateAs.Default">
            <summary>
            Creates a new instance each time this class is injected
            </summary>
        </member>
        <member name="F:SciChart.Wpf.UI.Bootstrap.CreateAs.Singleton">
            <summary>
            Creates and stores the class as a singleton in the container
            </summary>
        </member>
        <member name="M:SciChart.Wpf.UI.Bootstrap.Utility.ReflectionUtil.DiscoverTypesWithAttribute(System.Type,System.Reflection.Assembly)">
            <summary>
            Discovers all objects in the given assembly that are decorated with an attribute
            </summary>
            <devdoc>
            Type T must be an attribute. This method searches the given package for all classes that
            derive from interface type T</devdoc>
            <param name="interfaceType">The interface type to search by</param>
            <param name="objectAssembly">The assembly to search in</param>
            <returns>A list of object types that implement T</returns>
            <exception cref="T:System.InvalidOperationException"/>
        </member>
    </members>
</doc>
